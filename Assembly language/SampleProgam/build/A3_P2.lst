     1                                  %include "io.mac"
     2                              <1> extern   proc_nwln, proc_PutCh, proc_PutStr
     3                              <1> extern   proc_GetStr, proc_GetCh
     4                              <1> extern   proc_PutInt, proc_GetInt
     5                              <1> extern   proc_PutLInt, proc_GetLInt
     6                              <1> 
     7                              <1> ;;-------------------------------------------------------------------
     8                              <1> %macro  .STARTUP  0
     9                              <1> ;group dgroup .data .bss
    10                              <1>         global   _start
    11                              <1> _start:
    12                              <1> %endmacro
    13                              <1> ;;-------------------------------------------------------------------
    14                              <1> 
    15                              <1> 
    16                              <1> ;;-------------------------------------------------------------------
    17                              <1> %macro  .EXIT  0
    18                              <1>         mov    EAX,1
    19                              <1>         xor    EBX,EBX
    20                              <1>         int    0x80
    21                              <1> %endmacro
    22                              <1> ;;-------------------------------------------------------------------
    23                              <1> 
    24                              <1> 
    25                              <1> ;;-------------------------------------------------------------------
    26                              <1> %macro  .DATA 0
    27                              <1>         segment .data
    28                              <1> %endmacro
    29                              <1> ;;-------------------------------------------------------------------
    30                              <1> 
    31                              <1> ;;-------------------------------------------------------------------
    32                              <1> %macro  .UDATA 0
    33                              <1>         segment .bss
    34                              <1> %endmacro
    35                              <1> ;;-------------------------------------------------------------------
    36                              <1> 
    37                              <1> ;;-------------------------------------------------------------------
    38                              <1> %macro  .CODE 0
    39                              <1>         segment .data
    40                              <1>         segment .bss
    41                              <1>         segment .text
    42                              <1> %endmacro
    43                              <1> ;;-------------------------------------------------------------------
    44                              <1> 
    45                              <1> 
    46                              <1> ;;-------------------------------------------------------------------
    47                              <1> %macro  nwln  0 
    48                              <1>         call    proc_nwln
    49                              <1> %endmacro
    50                              <1> ;;-------------------------------------------------------------------
    51                              <1> 
    52                              <1> 
    53                              <1> ;;-------------------------------------------------------------------
    54                              <1> %macro  PutCh  1 
    55                              <1>         push    AX
    56                              <1>         mov     AL,%1
    57                              <1>         call    proc_PutCh
    58                              <1>         pop     AX
    59                              <1> %endmacro
    60                              <1> ;;-------------------------------------------------------------------
    61                              <1> 
    62                              <1> 
    63                              <1> ;;-------------------------------------------------------------------
    64                              <1> %macro  PutStr  1 
    65                              <1>         push    ECX
    66                              <1>         mov     ECX,%1
    67                              <1>         call    proc_PutStr
    68                              <1>         pop     ECX
    69                              <1> %endmacro
    70                              <1> ;;-------------------------------------------------------------------
    71                              <1> 
    72                              <1> 
    73                              <1> ;;-------------------------------------------------------------------
    74                              <1> %macro  GetStr  1-2 81
    75                              <1>         push    ESI
    76                              <1>         push    EDI
    77                              <1>         mov     EDI,%1
    78                              <1>         mov     ESI,%2
    79                              <1>         call    proc_GetStr
    80                              <1>         pop     EDI
    81                              <1>         pop     ESI
    82                              <1> %endmacro
    83                              <1> ;;-------------------------------------------------------------------
    84                              <1> 
    85                              <1> 
    86                              <1> ;;-------------------------------------------------------------------
    87                              <1> %macro  GetCh   1
    88                              <1>         push    SI
    89                              <1>         xor     SI,SI
    90                              <1> %ifidni %1,AL
    91                              <1>         ;inc     SI
    92                              <1>         call    proc_GetCh
    93                              <1> %elifidni %1,AH
    94                              <1>         mov     SI,1
    95                              <1>         call    proc_GetCh
    96                              <1> %else
    97                              <1>         push    AX
    98                              <1>         call    proc_GetCh
    99                              <1>         mov     %1,AL
   100                              <1>         pop     AX
   101                              <1> %endif
   102                              <1>         pop     SI
   103                              <1> %endmacro
   104                              <1> ;;-------------------------------------------------------------------
   105                              <1> 
   106                              <1> 
   107                              <1> ;;-------------------------------------------------------------------
   108                              <1> %macro  PutInt  1
   109                              <1>         push    AX
   110                              <1>         mov     AX,%1
   111                              <1>         call    proc_PutInt
   112                              <1>         pop     AX
   113                              <1> %endmacro
   114                              <1> ;;-------------------------------------------------------------------
   115                              <1> 
   116                              <1> 
   117                              <1> ;;-------------------------------------------------------------------
   118                              <1> %macro  GetInt  1
   119                              <1> %ifnidni %1,AX
   120                              <1>         push    AX
   121                              <1>         call    proc_GetInt
   122                              <1>         mov     %1,AX
   123                              <1> 	  pop     AX
   124                              <1> %else 
   125                              <1>         call  proc_GetInt
   126                              <1> %endif
   127                              <1> %endmacro
   128                              <1> ;;-------------------------------------------------------------------
   129                              <1> 
   130                              <1> ;;-------------------------------------------------------------------
   131                              <1> %macro  PutLInt  1
   132                              <1>         push    EAX
   133                              <1>         mov     EAX,%1
   134                              <1>         call    proc_PutLInt
   135                              <1>         pop     EAX
   136                              <1> %endmacro
   137                              <1> ;;-------------------------------------------------------------------
   138                              <1> 
   139                              <1> ;;-------------------------------------------------------------------
   140                              <1> %macro  GetLInt  1
   141                              <1> %ifnidni %1,EAX
   142                              <1>         push    EAX
   143                              <1>         call    proc_GetLInt
   144                              <1>         mov     %1,EAX
   145                              <1> 	  pop     EAX
   146                              <1> %else 
   147                              <1>         call  proc_GetLInt
   148                              <1> %endif
   149                              <1> %endmacro
   150                              <1> ;;-------------------------------------------------------------------
   151                              <1> 
     2                                  
     3                                  .DATA
    27                              <1>  segment .data
     4 00000000 506C6561736520456E-     inputMessage db  "Please Enter Your Full Name", 0
     4 00000009 74657220596F757220-
     4 00000012 46756C6C204E616D65-
     4 0000001B 00                 
     5                                  
     6                                  .UDATA
    33                              <1>  segment .bss
     7 00000000 <res 40h>               FullName resw 32
     8                                  ;first_name resw 32
     9                                  ;cnt resb 1
    10                                  
    11                                   
    12                                  .CODE
    39                              <1>  segment .data
    40                              <1>  segment .bss
    41                              <1>  segment .text
    13                                      .STARTUP
     9                              <1> 
    10                              <1>  global _start
    11                              <1> _start:
    14                                      PutStr  inputMessage
    65 00000000 51                  <1>  push ECX
    66 00000001 B9[00000000]        <1>  mov ECX,%1
    67 00000006 E8(00000000)        <1>  call proc_PutStr
    68 0000000B 59                  <1>  pop ECX
    15                                      nwln
    48 0000000C E8(00000000)        <1>  call proc_nwln
    16                                      GetStr  FullName
    75 00000011 56                  <1>  push ESI
    76 00000012 57                  <1>  push EDI
    77 00000013 BF[00000000]        <1>  mov EDI,%1
    78 00000018 BE51000000          <1>  mov ESI,%2
    79 0000001D E8(00000000)        <1>  call proc_GetStr
    80 00000022 5F                  <1>  pop EDI
    81 00000023 5E                  <1>  pop ESI
    17 00000024 B8[00000000]                mov EAX,FullName
    18 00000029 E809000000                  call operation
    19                                      
    20                                  
    21                                  done:
    22                                      .EXIT
    18 0000002E B801000000          <1>  mov EAX,1
    19 00000033 31DB                <1>  xor EBX,EBX
    20 00000035 CD80                <1>  int 0x80
    23                                  
    24                                  ;-------------------------Funtion code ------------------------------------------------------;      
    25                                  operation:
    26 00000037 50                          push EAX
    27 00000038 66BB0000                    mov BX,0
    28 0000003C 89C1                        mov ECX,EAX
    29                                      loop_char:
    30 0000003E 803820                          cmp byte[EAX]," "
    31 00000041 7504                            jne abc
    32 00000043 6683C301                        add BX,1
    33                                          abc:
    34 00000047 83C001                          add EAX,1
    35 0000004A 6683FB02                        cmp BX,2
    36 0000004E 7402                            je display_last_name
    37 00000050 EBEC                            jmp loop_char
    38                                  
    39                                      display_last_name:
    40 00000052 803800                          cmp byte[EAX],0
    41 00000055 7511                            jne f1
    42 00000057 66BB0000                        mov BX,0
    43                                          PutCh " "
    55 0000005B 6650                <1>  push AX
    56 0000005D B020                <1>  mov AL,%1
    57 0000005F E8(00000000)        <1>  call proc_PutCh
    58 00000064 6658                <1>  pop AX
    44 00000066 EB10                            jmp display_first_name
    45                                          f1:
    46                                          PutCh byte[EAX]
    55 00000068 6650                <1>  push AX
    56 0000006A 8A00                <1>  mov AL,%1
    57 0000006C E8(00000000)        <1>  call proc_PutCh
    58 00000071 6658                <1>  pop AX
    47 00000073 83C001                          add EAX,1
    48 00000076 EBDA                            jmp display_last_name
    49                                      display_first_name:
    50 00000078 803920                          cmp byte[ECX]," "
    51 0000007B 7504                            jne abcd
    52 0000007D 6683C301                        add BX,1
    53                                          abcd:
    54                                          PutCh [ECX]
    55 00000081 6650                <1>  push AX
    56 00000083 8A01                <1>  mov AL,%1
    57 00000085 E8(00000000)        <1>  call proc_PutCh
    58 0000008A 6658                <1>  pop AX
    55 0000008C 83C101                          add ECX,1
    56 0000008F 6683FB02                        cmp BX,2
    57 00000093 7402                            je operation_return
    58 00000095 EBE1                            jmp display_first_name
    59                                      operation_return:
    60                                          nwln
    48 00000097 E8(00000000)        <1>  call proc_nwln
    61 0000009C 58                              pop EAX
    62 0000009D C3                              ret 
    63                                  
    64                                          
