     1                                  %include  "io.mac"
     2                              <1> extern   proc_nwln, proc_PutCh, proc_PutStr
     3                              <1> extern   proc_GetStr, proc_GetCh
     4                              <1> extern   proc_PutInt, proc_GetInt
     5                              <1> extern   proc_PutLInt, proc_GetLInt
     6                              <1> 
     7                              <1> ;;-------------------------------------------------------------------
     8                              <1> %macro  .STARTUP  0
     9                              <1> ;group dgroup .data .bss
    10                              <1>         global   _start
    11                              <1> _start:
    12                              <1> %endmacro
    13                              <1> ;;-------------------------------------------------------------------
    14                              <1> 
    15                              <1> 
    16                              <1> ;;-------------------------------------------------------------------
    17                              <1> %macro  .EXIT  0
    18                              <1>         mov    EAX,1
    19                              <1>         xor    EBX,EBX
    20                              <1>         int    0x80
    21                              <1> %endmacro
    22                              <1> ;;-------------------------------------------------------------------
    23                              <1> 
    24                              <1> 
    25                              <1> ;;-------------------------------------------------------------------
    26                              <1> %macro  .DATA 0
    27                              <1>         segment .data
    28                              <1> %endmacro
    29                              <1> ;;-------------------------------------------------------------------
    30                              <1> 
    31                              <1> ;;-------------------------------------------------------------------
    32                              <1> %macro  .UDATA 0
    33                              <1>         segment .bss
    34                              <1> %endmacro
    35                              <1> ;;-------------------------------------------------------------------
    36                              <1> 
    37                              <1> ;;-------------------------------------------------------------------
    38                              <1> %macro  .CODE 0
    39                              <1>         segment .data
    40                              <1>         segment .bss
    41                              <1>         segment .text
    42                              <1> %endmacro
    43                              <1> ;;-------------------------------------------------------------------
    44                              <1> 
    45                              <1> 
    46                              <1> ;;-------------------------------------------------------------------
    47                              <1> %macro  nwln  0 
    48                              <1>         call    proc_nwln
    49                              <1> %endmacro
    50                              <1> ;;-------------------------------------------------------------------
    51                              <1> 
    52                              <1> 
    53                              <1> ;;-------------------------------------------------------------------
    54                              <1> %macro  PutCh  1 
    55                              <1>         push    AX
    56                              <1>         mov     AL,%1
    57                              <1>         call    proc_PutCh
    58                              <1>         pop     AX
    59                              <1> %endmacro
    60                              <1> ;;-------------------------------------------------------------------
    61                              <1> 
    62                              <1> 
    63                              <1> ;;-------------------------------------------------------------------
    64                              <1> %macro  PutStr  1 
    65                              <1>         push    ECX
    66                              <1>         mov     ECX,%1
    67                              <1>         call    proc_PutStr
    68                              <1>         pop     ECX
    69                              <1> %endmacro
    70                              <1> ;;-------------------------------------------------------------------
    71                              <1> 
    72                              <1> 
    73                              <1> ;;-------------------------------------------------------------------
    74                              <1> %macro  GetStr  1-2 81
    75                              <1>         push    ESI
    76                              <1>         push    EDI
    77                              <1>         mov     EDI,%1
    78                              <1>         mov     ESI,%2
    79                              <1>         call    proc_GetStr
    80                              <1>         pop     EDI
    81                              <1>         pop     ESI
    82                              <1> %endmacro
    83                              <1> ;;-------------------------------------------------------------------
    84                              <1> 
    85                              <1> 
    86                              <1> ;;-------------------------------------------------------------------
    87                              <1> %macro  GetCh   1
    88                              <1>         push    SI
    89                              <1>         xor     SI,SI
    90                              <1> %ifidni %1,AL
    91                              <1>         ;inc     SI
    92                              <1>         call    proc_GetCh
    93                              <1> %elifidni %1,AH
    94                              <1>         mov     SI,1
    95                              <1>         call    proc_GetCh
    96                              <1> %else
    97                              <1>         push    AX
    98                              <1>         call    proc_GetCh
    99                              <1>         mov     %1,AL
   100                              <1>         pop     AX
   101                              <1> %endif
   102                              <1>         pop     SI
   103                              <1> %endmacro
   104                              <1> ;;-------------------------------------------------------------------
   105                              <1> 
   106                              <1> 
   107                              <1> ;;-------------------------------------------------------------------
   108                              <1> %macro  PutInt  1
   109                              <1>         push    AX
   110                              <1>         mov     AX,%1
   111                              <1>         call    proc_PutInt
   112                              <1>         pop     AX
   113                              <1> %endmacro
   114                              <1> ;;-------------------------------------------------------------------
   115                              <1> 
   116                              <1> 
   117                              <1> ;;-------------------------------------------------------------------
   118                              <1> %macro  GetInt  1
   119                              <1> %ifnidni %1,AX
   120                              <1>         push    AX
   121                              <1>         call    proc_GetInt
   122                              <1>         mov     %1,AX
   123                              <1> 	  pop     AX
   124                              <1> %else 
   125                              <1>         call  proc_GetInt
   126                              <1> %endif
   127                              <1> %endmacro
   128                              <1> ;;-------------------------------------------------------------------
   129                              <1> 
   130                              <1> ;;-------------------------------------------------------------------
   131                              <1> %macro  PutLInt  1
   132                              <1>         push    EAX
   133                              <1>         mov     EAX,%1
   134                              <1>         call    proc_PutLInt
   135                              <1>         pop     EAX
   136                              <1> %endmacro
   137                              <1> ;;-------------------------------------------------------------------
   138                              <1> 
   139                              <1> ;;-------------------------------------------------------------------
   140                              <1> %macro  GetLInt  1
   141                              <1> %ifnidni %1,EAX
   142                              <1>         push    EAX
   143                              <1>         call    proc_GetLInt
   144                              <1>         mov     %1,EAX
   145                              <1> 	  pop     EAX
   146                              <1> %else 
   147                              <1>         call  proc_GetLInt
   148                              <1> %endif
   149                              <1> %endmacro
   150                              <1> ;;-------------------------------------------------------------------
   151                              <1> 
     2                                  .DATA
    27                              <1>  segment .data
     3 00000000 454E54455220594F55-     name_msg  db "ENTER YOUR NAME: ",0;
     3 00000009 52204E414D453A2000 
     4 00000012 796F7572206E616D65-     output db "your name: " ,0;
     4 0000001B 3A2000             
     5 0000001E 2066697273745F6C6F-     debug db " first_loop: ",0
     5 00000027 6F703A2000         
     6                                  .UDATA
    33                              <1>  segment .bss
     7 00000000 <res 1Fh>               name resb 31;
     8                                  .CODE
    39                              <1>  segment .data
    40                              <1>  segment .bss
    41                              <1>  segment .text
     9                                  	.STARTUP
     9                              <1> 
    10                              <1>  global _start
    11                              <1> _start:
    10                                  	PutStr name_msg 
    65 00000000 51                  <1>  push ECX
    66 00000001 B9[00000000]        <1>  mov ECX,%1
    67 00000006 E8(00000000)        <1>  call proc_PutStr
    68 0000000B 59                  <1>  pop ECX
    11                                  	GetStr name
    75 0000000C 56                  <1>  push ESI
    76 0000000D 57                  <1>  push EDI
    77 0000000E BF[00000000]        <1>  mov EDI,%1
    78 00000013 BE51000000          <1>  mov ESI,%2
    79 00000018 E8(00000000)        <1>  call proc_GetStr
    80 0000001D 5F                  <1>  pop EDI
    81 0000001E 5E                  <1>  pop ESI
    12 0000001F BB[00000000]            	mov EBX,name
    13                                  	PutStr output
    65 00000024 51                  <1>  push ECX
    66 00000025 B9[12000000]        <1>  mov ECX,%1
    67 0000002A E8(00000000)        <1>  call proc_PutStr
    68 0000002F 59                  <1>  pop ECX
    14 00000030 28C9                    	sub CL,CL
    15                                  first_loop:
    16 00000032 8A03                    	mov AL,[EBX]
    17 00000034 3C20                    	cmp AL,' '
    18 00000036 7403                    	je incr
    19 00000038 43                      	inc EBX
    20 00000039 EBF7                    	jmp first_loop
    21                                  incr:
    22 0000003B FEC1                    	inc CL
    23 0000003D 80F901                  	cmp CL,1
    24 00000040 7403                    	je last_name
    25 00000042 43                      	inc EBX
    26 00000043 EBED                    	jmp first_loop
    27                                  last_name:
    28 00000045 43                      	inc EBX
    29 00000046 8A03                    	mov AL,[EBX]
    30 00000048 3C00                    	cmp AL,0
    31 0000004A 740D                    	je done
    32                                  	PutCh AL
    55 0000004C 6650                <1>  push AX
    56 0000004E 88C0                <1>  mov AL,%1
    57 00000050 E8(00000000)        <1>  call proc_PutCh
    58 00000055 6658                <1>  pop AX
    33 00000057 EBEC                    	jmp last_name
    34                                  done:
    35                                  	PutCh ' ' 
    55 00000059 6650                <1>  push AX
    56 0000005B B020                <1>  mov AL,%1
    57 0000005D E8(00000000)        <1>  call proc_PutCh
    58 00000062 6658                <1>  pop AX
    36 00000064 BB[00000000]            	mov EBX,name
    37 00000069 28C9                    	sub CL,CL
    38                                  first_name:
    39 0000006B 8A03                    	mov AL,[EBX]
    40 0000006D 3C20                    	cmp AL,' '
    41 0000006F 740E                    	je check
    42 00000071 43                      	inc EBX
    43                                  	PutCh AL
    55 00000072 6650                <1>  push AX
    56 00000074 88C0                <1>  mov AL,%1
    57 00000076 E8(00000000)        <1>  call proc_PutCh
    58 0000007B 6658                <1>  pop AX
    44 0000007D EBEC                    	jmp first_name
    45                                  check:
    46 0000007F FEC1                    	inc CL
    47 00000081 80F901                  	cmp CL,1
    48 00000084 740E                    	je complete
    49                                  	PutCh AL
    55 00000086 6650                <1>  push AX
    56 00000088 88C0                <1>  mov AL,%1
    57 0000008A E8(00000000)        <1>  call proc_PutCh
    58 0000008F 6658                <1>  pop AX
    50 00000091 43                      	inc EBX
    51 00000092 EBD7                    	jmp first_name
    52                                  complete:
    53                                  	nwln 
    48 00000094 E8(00000000)        <1>  call proc_nwln
    54                                  	.EXIT
    18 00000099 B801000000          <1>  mov EAX,1
    19 0000009E 31DB                <1>  xor EBX,EBX
    20 000000A0 CD80                <1>  int 0x80
